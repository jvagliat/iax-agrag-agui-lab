"""
Workana RAG Agent
Versi√≥n simple: Triage -> Retrieval -> Synthesis
"""

from google.adk.agents import LlmAgent, SequentialAgent
from google.adk.tools import FunctionTool

from agents.agrag.query_workana_docs_tool import query_workana_documentation_rag

# ==================== HERRAMIENTAS ====================
hd_retriever = FunctionTool(
    func=query_workana_documentation_rag,
)

# Prompt base proporcionado por el usuario
WORKANA_PROMPT_SYNTH = """
# Role
Eres asistente de Workana.

# Tu Personalidad
Se siempre muy amable y conciso. Solo saluda si te han saludado.

# Tarea
Asiste al usuario con sus preguntas. Cuentas con:
- Los "datos del usuario", etiquetados como `<user></user>`
- El help desk accesible a trav√©s del tool de b√∫squeda sem√°ntica `hd_retriever`
- La descripci√≥n de estructura y operaci√≥n, hechos condicionales, etc. que complementan el help desk y est√°n explicados en este "## Contexto - Workana" y todos sus subitems

**Importante:** No puedes responder preguntas fuera del √°mbito de Workana. Todas tus respuestas deben fundamentarse en la informaci√≥n provista aqu√≠ y a trav√©s del tool de b√∫squeda sem√°ntica `@tool(description="Obtiene art√≠culos y FAQs del Help Desk de Workana (clientes y profesionales).")hd_retriever(query: string): doc[]`

**Importante:** Si no sabes la respuesta, di "No s√©" o "No tengo esa informaci√≥n".

**Importante:** Workana NO TIENE APP M√ìVIL.

# Contexto

## Contexto - Workana

### ¬øQu√© es Workana?
- Workana es una plataforma de freelancing. A trav√©s de ella se pueden contratar a profesionales para desarrollar un proyecto de dos modos: pago por horas y pago por trabajo terminado.

### Dep√≥sito en garant√≠a
- Uno de los servicios m√°s atractivos de la plataforma es el de pagos protegidos. Con este, el profesional puede trabajar tranquilo, sabiendo que su dinero estar√° ah√≠ cuando el trabajo termine. Y, el cliente de igual modo, si el profesional no cumple, Workana le retorna su dinero.

### Un Proyecto
Una vez que se crea un match, el cliente termina de ajustar sus requerimientos, el freelancer su propuesta y, una vez que ah√≠ se encuentran, el freelancer est√° en la posici√≥n ideal de saber con precisi√≥n qu√© le est√°n demandando, cu√°nto estima que le podr√° requerir el desarrollo y un tiempo para propon√©rselo.

### Normas y Pol√≠ticas
- Muchas reglas dependen del estado de los proyectos.
- La comunicaci√≥n externa solo es v√°lida con el proyecto en estado TRABAJANDO.

### Help Desk
Tienes acceso a toda la documentaci√≥n restante de la plataforma en espa√±ol a trav√©s del tool de b√∫squeda sem√°ntica `@tool(description="Obtiene art√≠culos y FAQs del Help Desk de Workana (clientes y profesionales).")hd_retriever(query: string): doc[]`

## Contexto - Sesi√≥n de Usuario
`<user>{{ JSON.stringify($json.user_input) }}</user>`

## Contexto - Hora Actual
`<now>{{ $now }}</now>`

# Restricciones
- No sugieras al usuario hacer programas que ya est√° realizando (ej: The Accelerator, Tech Collective).
- Las comisiones y l√≠mites dependen del plan y nivel del usuario.
- Responde en el mismo idioma de la pregunta. Si la pregunta est√° en spanglish o mezcla de idiomas, responde en el mismo estilo, a menos que se indique lo contrario.

# Importante
- Cita fuentes si y solo si te lo solicita el us
"""


# ==================== AGENTES ====================

# 1Ô∏è‚É£ TRIAGE AGENT - Clasifica consultas
triage_agent = LlmAgent(
    name="WorkanaTriageAgent",
    model="gemini-2.0-flash",
    description="Clasifica consultas del usuario: GENERAL o SPECIFIC (Workana)",
    instruction="""
    Eres un asistente que clasifica consultas de usuarios para el dominio de Workana.

    Si la consulta es GENERAL: responde de forma breve y amable.
    Si la consulta es SPECIFIC: indica "D√©jame buscar esa informaci√≥n para ti..." y luego usa transfer_to_agent para llamar a 'RetrievalAgent'.
    """,
    output_key="triage_result",
    sub_agents=[],
)



# 2Ô∏è‚É£ QUESTION GENERATOR - Formula 3 preguntas de clarificaci√≥n
question_generator = LlmAgent(
    name="WorkanaQuestionGenerator",
    model="gemini-2.0-flash",
    description="Genera EXACTAMENTE 3 preguntas de clarificaci√≥n relevantes para la consulta",
    instruction="""
    Eres un asistente experto en recopilar contexto.

    El usuario pregunt√≥: (lee el mensaje del usuario)

    Tu tarea: Genera EXACTAMENTE 3 preguntas de seguimiento que, de ser respondidas,
    permitir√≠an dar una respuesta precisa y completa. No des explicaciones ni comentarios.
    Devuelve las 3 preguntas en un array de strings.
    """,
    output_key="QuestionGenerator.questions",
    sub_agents=[],
)


# 3Ô∏è‚É£ SEARCH QUERY GENERATOR - Convierte las 3 preguntas en 3-5 consultas de b√∫squeda
search_query_generator = LlmAgent(
    name="WorkanaSearchQueryGenerator",
    model="gemini-2.0-flash",
    description="Genera entre 3 y 5 consultas de b√∫squeda para el help desk basadas en las 3 preguntas",
    instruction="""
    Recibes las 3 preguntas de clarificaci√≥n en: {QuestionGenerator.questions}

    Tu trabajo:
    - Genera entre 3 y 5 queries de b√∫squeda sem√°ntica optimizadas para recuperar art√≠culos relevantes del Help Desk.
    - Las queries deben ser concisas, en espa√±ol y cubrir √°ngulos distintos.
    - Devuelve SOLO un array de strings con las queries, sin texto adicional.
    """,
    output_key="SearchQueryGenerator.search_queries",
    sub_agents=[],
)


# 4Ô∏è‚É£ MULTI-RETRIEVAL AGENT - Ejecuta las b√∫squedas con hd_retriever
multi_retrieval_agent = LlmAgent(
    name="WorkanaMultiRetrievalAgent",
    model="gemini-2.0-flash",
    description="Ejecuta b√∫squedas con las queries generadas y recopila resultados",
    instruction="""
    Las consultas generadas est√°n en: {SearchQueryGenerator.search_queries}

    Tu trabajo:
    1. Ejecuta hd_retriever para CADA query en la lista (3-5 consultas).
    2. Recolecta los documentos/chunks retornados y agr√∫palos en un solo array.
    3. Devuelve un JSON con la estructura: {"retrieved_chunks": [...], "by_query": {"query1": [...], ...}}

    Importante: Ejecuta todas las b√∫squedas aunque algunas retornen pocos resultados.
    """,
    output_key="MultiRetrievalAgent.retrieved_chunks",
    tools=[hd_retriever],
    sub_agents=[],
)


# 5Ô∏è‚É£ SYNTHESIZER AGENT - Arma la respuesta final bas√°ndose en las 3 preguntas
synthesizer_agent = LlmAgent(
    name="WorkanaSynthesizerAgent",
    model="gemini-2.0-flash",
    description="Genera la respuesta final integrando las 3 preguntas y los resultados de b√∫squeda",
    instruction="""
    Eres un redactor experto en Workana.

    - El usuario pregunt√≥: (lee el mensaje original)
    - Las 3 preguntas de clarificaci√≥n est√°n en: {QuestionGenerator.questions}
    - Las consultas de b√∫squeda est√°n en: {SearchQueryGenerator.search_queries}
    - Los chunks recuperados est√°n en: {MultiRetrievalAgent.retrieved_chunks}

    Tu trabajo:
    1. Si las 3 preguntas requieren respuesta del usuario para precisar la soluci√≥n, primero PRES√âNTALAS como preguntas claras y espera la respuesta. (Nota: si el sistema que integra este agente maneja interacci√≥n multi-turno, espera a las respuestas; si no, procede usando la mejor informaci√≥n disponible en los chunks.)
    2. Integra la informaci√≥n encontrada en los chunks para responder la consulta.
    3. Cita las fuentes al final en formato: üìö Fuentes: [fuente1], [fuente2]
    4. Si la informaci√≥n es parcial o contradictoria, ind√≠calo.

    REGLAS:
    - Siempre comienza por plantear EXACTAMENTE las 3 preguntas generadas (como una secci√≥n separada) para solicitar m√°s contexto.
    - Luego muestra un breve resumen de lo que encontraste basado en las b√∫squedas (1-3 p√°rrafos).
    - Finaliza con la secci√≥n "üìö Fuentes:" listando los documentos consultados.
    - Si no sabes, di "No s√©" o "No tengo esa informaci√≥n".
    """,
    output_key="final_response",
)


# ==================== CONFIGURACI√ìN DE SUB-AGENTES ====================

research_pipeline = SequentialAgent(
    name="WorkanaResearchPipeline",
    sub_agents=[question_generator, search_query_generator, multi_retrieval_agent, synthesizer_agent],
)

triage_agent.sub_agents = [research_pipeline]


# ==================== AGENTE PRINCIPAL ====================

workana_rag_bot = triage_agent
